#!/bin/sh

# Check for files that exceed recommended length limits
echo "üìè Checking file length..."

# Get list of staged TypeScript/JavaScript files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(ts|tsx|js|jsx)$')

if [ -z "$STAGED_FILES" ]; then
  echo "‚úÖ No TypeScript/JavaScript files to check"
  exit 0
fi

# File length limits (based on Gilles Fabre's recommendations)
MAX_LINES=250
WARN_LINES=150

# Check each staged file
LONG_FILES=""
WARN_FILES=""

for file in $STAGED_FILES; do
  if [ -f "$file" ]; then
    # Skip autogenerated files
    if [[ "$file" == *".expo/"* ]] || [[ "$file" == *"node_modules/"* ]] || [[ "$file" == *"ios/"* ]] || [[ "$file" == *"android/"* ]] || [[ "$file" == *"dist/"* ]] || [[ "$file" == *".expo/types/"* ]]; then
      continue
    fi
    
    # Count lines excluding imports and empty lines
    LINES=$(grep -v '^import\|^export.*from\|^$' "$file" | wc -l | tr -d ' ')
    
    if [ "$LINES" -gt "$MAX_LINES" ]; then
      LONG_FILES="$LONG_FILES\n  üìÑ $file: $LINES lines (exceeds $MAX_LINES)"
    elif [ "$LINES" -gt "$WARN_LINES" ]; then
      WARN_FILES="$WARN_FILES\n  üìÑ $file: $LINES lines (approaching $MAX_LINES)"
    fi
  fi
done

# Report results
if [ -n "$LONG_FILES" ]; then
  echo ""
  echo "‚ö†Ô∏è  FILES EXCEEDING RECOMMENDED LENGTH ($MAX_LINES lines):"
  echo "$LONG_FILES"
  echo ""
  echo "üí° Consider refactoring:"
  echo "   - Extract logic into .hook.ts files"
  echo "   - Split large components into smaller ones"
  echo "   - Move constants to .const.ts files"
  echo "   - Extract schemas to .schema.ts files"
  echo ""
  echo "üìñ See: https://gilles-fabre.medium.com/what-are-the-best-practices-for-react-or-react-native-b66425db7275"
  echo ""
fi

if [ -n "$WARN_FILES" ] && [ -z "$LONG_FILES" ]; then
  echo ""
  echo "üìä Files approaching length limit ($WARN_LINES+ lines):"
  echo "$WARN_FILES"
  echo "üí≠ Consider refactoring when convenient"
  echo ""
fi

echo "‚úÖ File length check completed"
